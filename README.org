#+TITLE: winnow.el
#+AUTHOR: Charles L.G. Comstock
#+EMAIL: dgtized@gmail.com

[[https://melpa.org/#/winnow][file:https://melpa.org/packages/winnow-badge.svg]]
[[https://github.com/dgtized/winnow.el/actions][file:https://github.com/dgtized/winnow.el/actions/workflows/ci.yaml/badge.svg?branch=master]]

#+BEGIN_QUOTE
Winnow - verb

1.  Blow a current of air through (grain) in order to remove the chaff.

1.1.  Remove (chaff) from grain.

1.2.  Remove (people or things) from a group until only the best ones are left.

1.3.  Find or identify (a valuable or useful part of something)
#+END_QUOTE

[[file:winnow.gif]]

* Usage

Winnow the results from ~compilation-mode~ buffers by matching or excluding
lines from the results.

This was written to enhance [[https://github.com/Wilfred/ag.el][ag.el]], by filtering ~ag-mode~ results buffers by
iteratively applying match and exclude, winnowing the results.

The following key bindings are enabled:

| Key | Function             |
|-----+----------------------|
| x   | winnow-exclude-lines |
| m   | winnow-match-lines   |

The builtin ~highlight-regexp~ (=M-s h r=) can be used to show interesting
matches in the set.

Basic workflow is to run an ag search (through say ~projectile-ag~), and then use
~winnow-exclude-lines~ and ~winnow-match-lines~ to keep/flush matching lines in
the search results. If it's too filtered, just ~recompile~.

[[https://www.youtube.com/watch?v=BjX8-D-NonY][Emacs Elements: Winnow]] has a longer video demonstration.

* Install

Using the [[https://melpa.milkbox.net][MELPA]] package archive, 

 : M-x package-install [RET] winnow [RET]

And then add the following somewhere in your emacs initialization

#+BEGIN_SRC emacs-lisp
  (add-hook 'ag-mode-hook 'winnow-mode)
#+END_SRC

Broadly it should work anything that derives from ~compilation-mode~ so

#+BEGIN_SRC emacs-lisp
  (add-hook 'compilation-mode-hook 'winnow-mode)
#+END_SRC

will enable it everywhere. That should definitely work on ~grep-mode~, and may
be applicable to other compilation modes. It should work even without a
compilation mode buffer, if enabled as a minor mode, but it's functionality may
not be as useful. It has been tested this way with ~occur-mode~ and appears to
work nicely.

* License

Copyright Â© 2017-2025 Charles L.G. Comstock

Distributed under the GNU General Public License, version 3
